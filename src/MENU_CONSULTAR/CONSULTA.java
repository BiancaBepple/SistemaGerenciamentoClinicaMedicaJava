/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MENU_CONSULTAR;

import BANCO.conexao;
import MENU_CADASTRO.ConverteData;
import MENU_CADASTRO.PACIENTE;
import MENU_CADASTRO.cadastro;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 20171inf0171
 */
public class CONSULTA extends javax.swing.JFrame {

    /**
     * Creates new form CONSULTA
     */
    public CONSULTA() {
        initComponents();
    }

    public void consulta(String tipopesquisa, String pesquisa) {

        try {
            //CONSULTAR PACIENTES CADASTRADOS
            DefaultTableModel grid0 = (DefaultTableModel) tabelaconsulta.getModel();
            grid0.setNumRows(0);
            Connection conn = null;
            conexao bd = new conexao();
            conn = bd.getConnection();
            Statement stmt = null;
            ResultSet rs = null;
            String sqlConsulta = "select idconsulta, paciente, medico, data, hora, diagnostico from consulta where " + tipopesquisa + " like '%" + pesquisa + "%' order by data";
            stmt = conn.createStatement();
            PreparedStatement stm = null;
            rs = stmt.executeQuery(sqlConsulta);
            while (rs.next()) {
                String recebe_cod = Integer.toString(rs.getInt("idconsulta"));
                String recebe_nomepaciente = rs.getString("paciente");
                String recebe_medico = (rs.getString("medico"));
                String recebe_data = rs.getString("data");
                String recebe_horario = rs.getString("hora");
                String recebe_diagnostico = rs.getString("diagnostico");
                // int recebe_rg = rs.getInt("rg");
                // Mostra os valores na JTable
                ConverteData conv = new ConverteData();
                String data_convertida = conv.DataMostra(recebe_data);
        
                DefaultTableModel grid = (DefaultTableModel) tabelaconsulta.getModel();
                grid.addRow(new String[]{recebe_cod, recebe_nomepaciente, recebe_medico, data_convertida, recebe_horario, recebe_diagnostico});

            }
            rs.close();
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(PACIENTE.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void consultahoje(String pesquisa) {
        try {
            //CONSULTAR PACIENTES CADASTRADOS
            DefaultTableModel grid0 = (DefaultTableModel) tabelaconsulta.getModel();
            grid0.setNumRows(0);
            Connection conn = null;
            conexao bd = new conexao();
            conn = bd.getConnection();
            Statement stmt = null;
            ResultSet rs = null;
            // String pesquisa = "SELECT *,DATE_FORMAT(data,'%Y-%m-%d') AS data FROM consulta WHERE data= CURDATE()";
            String sqlConsulta = pesquisa;
//String sqlConsulta = "SELECT *,DATE_FORMAT(data,'%Y-%m-%d') AS data FROM consulta WHERE data= CURDATE()";
            stmt = conn.createStatement();
            PreparedStatement stm = null;
            rs = stmt.executeQuery(sqlConsulta);
            while (rs.next()) {
                String recebe_cod = Integer.toString(rs.getInt("idconsulta"));
                String recebe_nomepaciente = rs.getString("paciente");
                String recebe_medico = (rs.getString("medico"));
                String recebe_data = rs.getString("data");
                String recebe_horario = rs.getString("hora");
                String recebe_diagnostico = rs.getString("diagnostico");
                
                ConverteData conv = new ConverteData();
                String data_convertida = conv.DataMostra(recebe_data);
                // int recebe_rg = rs.getInt("rg");
                // Mostra os valores na JTable
                DefaultTableModel grid = (DefaultTableModel) tabelaconsulta.getModel();
                grid.addRow(new String[]{recebe_cod, recebe_nomepaciente, recebe_medico, data_convertida, recebe_horario, recebe_diagnostico});

            }
            rs.close();
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(PACIENTE.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paciente = new javax.swing.JButton();
        medico = new javax.swing.JButton();
        nomepaciente = new javax.swing.JTextField();
        nomemedico = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaconsulta = new javax.swing.JTable();
        consultahj = new javax.swing.JButton();
        finalizarconsulta = new javax.swing.JToggleButton();
        numeroconsul = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        excluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        paciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/search.png"))); // NOI18N
        paciente.setText("Pesquisar por paciente");
        paciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacienteActionPerformed(evt);
            }
        });

        medico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/search.png"))); // NOI18N
        medico.setText("Pesquisar por médico");
        medico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicoActionPerformed(evt);
            }
        });

        tabelaconsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "codigo consulta", "Paciente", "Médico", "Data", "Horario", "Diagnostico"
            }
        ));
        tabelaconsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaconsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaconsulta);

        consultahj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/calender.png"))); // NOI18N
        consultahj.setText("Consultas de hoje");
        consultahj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultahjActionPerformed(evt);
            }
        });

        finalizarconsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/complete.png"))); // NOI18N
        finalizarconsulta.setText("Visualizar consulta");
        finalizarconsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarconsultaActionPerformed(evt);
            }
        });

        jLabel1.setText("Número da consulta:");

        excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/delete.png"))); // NOI18N
        excluir.setText("Excluir Consulta");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomepaciente)
                    .addComponent(nomemedico, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paciente, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(medico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(consultahj, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(numeroconsul, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finalizarconsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(excluir)
                .addGap(187, 187, 187))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paciente)
                            .addComponent(nomepaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(medico)
                            .addComponent(nomemedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(consultahj, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalizarconsulta)
                    .addComponent(numeroconsul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(excluir))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(941, 747));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacienteActionPerformed
        consulta("paciente", nomepaciente.getText());
    }//GEN-LAST:event_pacienteActionPerformed

    private void medicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicoActionPerformed
        consulta("medico", nomemedico.getText());
    }//GEN-LAST:event_medicoActionPerformed

    private void consultahjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultahjActionPerformed
        consultahoje("SELECT *,DATE_FORMAT(data,'%Y-%m-%d') AS data FROM consulta WHERE data= CURDATE() order by idconsulta");
    }//GEN-LAST:event_consultahjActionPerformed

    private void finalizarconsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarconsultaActionPerformed
        try {
            mostraconsulta consulta = new mostraconsulta();
            consulta.setNumero_consulta(Integer.parseInt(numeroconsul.getText()));
            VISUALIZARCONSULTA fim = new VISUALIZARCONSULTA();
            fim.setVisible(true);
            fim.exportarnumeroconsulta(consulta);
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Preencha os campos corretamente!");
        }
    }//GEN-LAST:event_finalizarconsultaActionPerformed

    private void tabelaconsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaconsultaMouseClicked
        String var_cod;
        int var_Lin = 0;
        var_Lin = tabelaconsulta.getSelectedRow(); //retorna um inteiro
        var_cod = tabelaconsulta.getValueAt(var_Lin, 0).toString(); // Valor Chave da Tabela
        int codid = Integer.parseInt(var_cod);

        String codigo_consulta = (tabelaconsulta.getValueAt(var_Lin, 0).toString());
        numeroconsul.setText(codigo_consulta);


    }//GEN-LAST:event_tabelaconsultaMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        consultahoje("select idconsulta, paciente, medico, data, hora, diagnostico from consulta order by data");
    }//GEN-LAST:event_formWindowActivated

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        String var_cod;
        int var_Lin = 0;
        var_Lin = tabelaconsulta.getSelectedRow(); //retorna um inteiro
        var_cod = tabelaconsulta.getValueAt(var_Lin, 0).toString(); // Valor Chave da Tabela
        int codid = Integer.parseInt(var_cod);
        Connection conn = null;
        conexao bd = new conexao();
        conn = bd.getConnection();
        new mostraconsulta().excluirconsulta(conn, codid);
        
    }//GEN-LAST:event_excluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CONSULTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CONSULTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CONSULTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CONSULTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CONSULTA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton consultahj;
    private javax.swing.JButton excluir;
    private javax.swing.JToggleButton finalizarconsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton medico;
    private javax.swing.JTextField nomemedico;
    private javax.swing.JTextField nomepaciente;
    private javax.swing.JTextField numeroconsul;
    private javax.swing.JButton paciente;
    private javax.swing.JTable tabelaconsulta;
    // End of variables declaration//GEN-END:variables
}
